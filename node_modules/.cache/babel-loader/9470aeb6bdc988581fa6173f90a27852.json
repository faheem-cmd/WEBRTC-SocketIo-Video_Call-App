{"ast":null,"code":"var debug = require('debug')('simple-peer');\n\nvar getBrowserRTC = require('get-browser-rtc');\n\nvar randombytes = require('randombytes');\n\nvar stream = require('readable-stream');\n\nvar queueMicrotask = require('queue-microtask'); // TODO: remove when Node 10 is not supported\n\n\nvar MAX_BUFFERED_AMOUNT = 64 * 1024;\nvar ICECOMPLETE_TIMEOUT = 5 * 1000;\nvar CHANNEL_CLOSING_TIMEOUT = 5 * 1000; // HACK: Filter trickle lines when trickle is disabled #354\n\nfunction filterTrickle(sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '');\n}\n\nfunction makeError(message, code) {\n  var err = new Error(message);\n  err.code = code;\n  return err;\n}\n\nfunction warn(message) {\n  console.warn(message);\n}\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\n\n\nclass Peer extends stream.Duplex {\n  constructor(opts) {\n    opts = Object.assign({\n      allowHalfOpen: false\n    }, opts);\n    super(opts);\n    this._id = randombytes(4).toString('hex').slice(0, 7);\n\n    this._debug('new peer %o', opts);\n\n    this.channelName = opts.initiator ? opts.channelName || randombytes(20).toString('hex') : null;\n    this.initiator = opts.initiator || false;\n    this.channelConfig = opts.channelConfig || Peer.channelConfig;\n    this.config = Object.assign({}, Peer.config, opts.config);\n    this.offerOptions = opts.offerOptions || {};\n    this.answerOptions = opts.answerOptions || {};\n\n    this.sdpTransform = opts.sdpTransform || (sdp => sdp);\n\n    this.streams = opts.streams || (opts.stream ? [opts.stream] : []); // support old \"stream\" option\n\n    this.trickle = opts.trickle !== undefined ? opts.trickle : true;\n    this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false;\n    this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT;\n    this.destroyed = false;\n    this._connected = false;\n    this.remoteAddress = undefined;\n    this.remoteFamily = undefined;\n    this.remotePort = undefined;\n    this.localAddress = undefined;\n    this.localFamily = undefined;\n    this.localPort = undefined;\n    this._wrtc = opts.wrtc && typeof opts.wrtc === 'object' ? opts.wrtc : getBrowserRTC();\n\n    if (!this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw makeError('No WebRTC support: Specify `opts.wrtc` option in this environment', 'ERR_WEBRTC_SUPPORT');\n      } else {\n        throw makeError('No WebRTC support: Not a supported browser', 'ERR_WEBRTC_SUPPORT');\n      }\n    }\n\n    this._pcReady = false;\n    this._channelReady = false;\n    this._iceComplete = false; // ice candidate trickle done (got null candidate)\n\n    this._iceCompleteTimer = null; // send an offer/answer anyway after some timeout\n\n    this._channel = null;\n    this._pendingCandidates = [];\n    this._isNegotiating = !this.initiator; // is this peer waiting for negotiation to complete?\n\n    this._batchedNegotiation = false; // batch synchronous negotiations\n\n    this._queuedNegotiation = false; // is there a queued negotiation request?\n\n    this._sendersAwaitingStable = [];\n    this._senderMap = new Map();\n    this._firstStable = true;\n    this._closingInterval = null;\n    this._remoteTracks = [];\n    this._remoteStreams = [];\n    this._chunk = null;\n    this._cb = null;\n    this._interval = null;\n\n    try {\n      this._pc = new this._wrtc.RTCPeerConnection(this.config);\n    } catch (err) {\n      queueMicrotask(() => this.destroy(makeError(err, 'ERR_PC_CONSTRUCTOR')));\n      return;\n    } // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n\n\n    this._isReactNativeWebrtc = typeof this._pc._peerConnectionId === 'number';\n\n    this._pc.oniceconnectionstatechange = () => {\n      this._onIceStateChange();\n    };\n\n    this._pc.onicegatheringstatechange = () => {\n      this._onIceStateChange();\n    };\n\n    this._pc.onconnectionstatechange = () => {\n      this._onConnectionStateChange();\n    };\n\n    this._pc.onsignalingstatechange = () => {\n      this._onSignalingStateChange();\n    };\n\n    this._pc.onicecandidate = event => {\n      this._onIceCandidate(event);\n    }; // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n\n    if (this.initiator) {\n      this._setupData({\n        channel: this._pc.createDataChannel(this.channelName, this.channelConfig)\n      });\n    } else {\n      this._pc.ondatachannel = event => {\n        this._setupData(event);\n      };\n    }\n\n    if (this.streams) {\n      this.streams.forEach(stream => {\n        this.addStream(stream);\n      });\n    }\n\n    this._pc.ontrack = event => {\n      this._onTrack(event);\n    };\n\n    if (this.initiator) {\n      this._needsNegotiation();\n    }\n\n    this._onFinishBound = () => {\n      this._onFinish();\n    };\n\n    this.once('finish', this._onFinishBound);\n  }\n\n  get bufferSize() {\n    return this._channel && this._channel.bufferedAmount || 0;\n  } // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n\n\n  get connected() {\n    return this._connected && this._channel.readyState === 'open';\n  }\n\n  address() {\n    return {\n      port: this.localPort,\n      family: this.localFamily,\n      address: this.localAddress\n    };\n  }\n\n  signal(data) {\n    if (this.destroyed) throw makeError('cannot signal after peer is destroyed', 'ERR_SIGNALING');\n\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (err) {\n        data = {};\n      }\n    }\n\n    this._debug('signal()');\n\n    if (data.renegotiate && this.initiator) {\n      this._debug('got request to renegotiate');\n\n      this._needsNegotiation();\n    }\n\n    if (data.transceiverRequest && this.initiator) {\n      this._debug('got request for transceiver');\n\n      this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init);\n    }\n\n    if (data.candidate) {\n      if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n        this._addIceCandidate(data.candidate);\n      } else {\n        this._pendingCandidates.push(data.candidate);\n      }\n    }\n\n    if (data.sdp) {\n      this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(data)).then(() => {\n        if (this.destroyed) return;\n\n        this._pendingCandidates.forEach(candidate => {\n          this._addIceCandidate(candidate);\n        });\n\n        this._pendingCandidates = [];\n        if (this._pc.remoteDescription.type === 'offer') this._createAnswer();\n      }).catch(err => {\n        this.destroy(makeError(err, 'ERR_SET_REMOTE_DESCRIPTION'));\n      });\n    }\n\n    if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\n      this.destroy(makeError('signal() called with invalid signal data', 'ERR_SIGNALING'));\n    }\n  }\n\n  _addIceCandidate(candidate) {\n    var iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate);\n\n    this._pc.addIceCandidate(iceCandidateObj).catch(err => {\n      if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\n        warn('Ignoring unsupported ICE candidate.');\n      } else {\n        this.destroy(makeError(err, 'ERR_ADD_ICE_CANDIDATE'));\n      }\n    });\n  }\n  /**\n   * Send text/binary data to the remote peer.\n   * @param {ArrayBufferView|ArrayBuffer|Buffer|string|Blob} chunk\n   */\n\n\n  send(chunk) {\n    this._channel.send(chunk);\n  }\n  /**\n   * Add a Transceiver to the connection.\n   * @param {String} kind\n   * @param {Object} init\n   */\n\n\n  addTransceiver(kind, init) {\n    this._debug('addTransceiver()');\n\n    if (this.initiator) {\n      try {\n        this._pc.addTransceiver(kind, init);\n\n        this._needsNegotiation();\n      } catch (err) {\n        this.destroy(makeError(err, 'ERR_ADD_TRANSCEIVER'));\n      }\n    } else {\n      this.emit('signal', {\n        // request initiator to renegotiate\n        transceiverRequest: {\n          kind,\n          init\n        }\n      });\n    }\n  }\n  /**\n   * Add a MediaStream to the connection.\n   * @param {MediaStream} stream\n   */\n\n\n  addStream(stream) {\n    this._debug('addStream()');\n\n    stream.getTracks().forEach(track => {\n      this.addTrack(track, stream);\n    });\n  }\n  /**\n   * Add a MediaStreamTrack to the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n\n\n  addTrack(track, stream) {\n    this._debug('addTrack()');\n\n    var submap = this._senderMap.get(track) || new Map(); // nested Maps map [track, stream] to sender\n\n    var sender = submap.get(stream);\n\n    if (!sender) {\n      sender = this._pc.addTrack(track, stream);\n      submap.set(stream, sender);\n\n      this._senderMap.set(track, submap);\n\n      this._needsNegotiation();\n    } else if (sender.removed) {\n      throw makeError('Track has been removed. You should enable/disable tracks that you want to re-add.', 'ERR_SENDER_REMOVED');\n    } else {\n      throw makeError('Track has already been added to that stream.', 'ERR_SENDER_ALREADY_ADDED');\n    }\n  }\n  /**\n   * Replace a MediaStreamTrack by another in the connection.\n   * @param {MediaStreamTrack} oldTrack\n   * @param {MediaStreamTrack} newTrack\n   * @param {MediaStream} stream\n   */\n\n\n  replaceTrack(oldTrack, newTrack, stream) {\n    this._debug('replaceTrack()');\n\n    var submap = this._senderMap.get(oldTrack);\n\n    var sender = submap ? submap.get(stream) : null;\n\n    if (!sender) {\n      throw makeError('Cannot replace track that was never added.', 'ERR_TRACK_NOT_ADDED');\n    }\n\n    if (newTrack) this._senderMap.set(newTrack, submap);\n\n    if (sender.replaceTrack != null) {\n      sender.replaceTrack(newTrack);\n    } else {\n      this.destroy(makeError('replaceTrack is not supported in this browser', 'ERR_UNSUPPORTED_REPLACETRACK'));\n    }\n  }\n  /**\n   * Remove a MediaStreamTrack from the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n\n\n  removeTrack(track, stream) {\n    this._debug('removeSender()');\n\n    var submap = this._senderMap.get(track);\n\n    var sender = submap ? submap.get(stream) : null;\n\n    if (!sender) {\n      throw makeError('Cannot remove track that was never added.', 'ERR_TRACK_NOT_ADDED');\n    }\n\n    try {\n      sender.removed = true;\n\n      this._pc.removeTrack(sender);\n    } catch (err) {\n      if (err.name === 'NS_ERROR_UNEXPECTED') {\n        this._sendersAwaitingStable.push(sender); // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n\n      } else {\n        this.destroy(makeError(err, 'ERR_REMOVE_TRACK'));\n      }\n    }\n\n    this._needsNegotiation();\n  }\n  /**\n   * Remove a MediaStream from the connection.\n   * @param {MediaStream} stream\n   */\n\n\n  removeStream(stream) {\n    this._debug('removeSenders()');\n\n    stream.getTracks().forEach(track => {\n      this.removeTrack(track, stream);\n    });\n  }\n\n  _needsNegotiation() {\n    this._debug('_needsNegotiation');\n\n    if (this._batchedNegotiation) return; // batch synchronous renegotiations\n\n    this._batchedNegotiation = true;\n    queueMicrotask(() => {\n      this._batchedNegotiation = false;\n\n      this._debug('starting batched negotiation');\n\n      this.negotiate();\n    });\n  }\n\n  negotiate() {\n    if (this.initiator) {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true;\n\n        this._debug('already negotiating, queueing');\n      } else {\n        this._debug('start negotiation');\n\n        setTimeout(() => {\n          // HACK: Chrome crashes if we immediately call createOffer\n          this._createOffer();\n        }, 0);\n      }\n    } else {\n      if (!this._isNegotiating) {\n        this._debug('requesting negotiation from initiator');\n\n        this.emit('signal', {\n          // request initiator to renegotiate\n          renegotiate: true\n        });\n      }\n    }\n\n    this._isNegotiating = true;\n  } // TODO: Delete this method once readable-stream is updated to contain a default\n  // implementation of destroy() that automatically calls _destroy()\n  // See: https://github.com/nodejs/readable-stream/issues/283\n\n\n  destroy(err) {\n    this._destroy(err, () => {});\n  }\n\n  _destroy(err, cb) {\n    if (this.destroyed) return;\n\n    this._debug('destroy (error: %s)', err && (err.message || err));\n\n    this.readable = this.writable = false;\n    if (!this._readableState.ended) this.push(null);\n    if (!this._writableState.finished) this.end();\n    this.destroyed = true;\n    this._connected = false;\n    this._pcReady = false;\n    this._channelReady = false;\n    this._remoteTracks = null;\n    this._remoteStreams = null;\n    this._senderMap = null;\n    clearInterval(this._closingInterval);\n    this._closingInterval = null;\n    clearInterval(this._interval);\n    this._interval = null;\n    this._chunk = null;\n    this._cb = null;\n    if (this._onFinishBound) this.removeListener('finish', this._onFinishBound);\n    this._onFinishBound = null;\n\n    if (this._channel) {\n      try {\n        this._channel.close();\n      } catch (err) {}\n\n      this._channel.onmessage = null;\n      this._channel.onopen = null;\n      this._channel.onclose = null;\n      this._channel.onerror = null;\n    }\n\n    if (this._pc) {\n      try {\n        this._pc.close();\n      } catch (err) {}\n\n      this._pc.oniceconnectionstatechange = null;\n      this._pc.onicegatheringstatechange = null;\n      this._pc.onsignalingstatechange = null;\n      this._pc.onicecandidate = null;\n      this._pc.ontrack = null;\n      this._pc.ondatachannel = null;\n    }\n\n    this._pc = null;\n    this._channel = null;\n    if (err) this.emit('error', err);\n    this.emit('close');\n    cb();\n  }\n\n  _setupData(event) {\n    if (!event.channel) {\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n      // which is invalid behavior. Handle it gracefully.\n      // See: https://github.com/feross/simple-peer/issues/163\n      return this.destroy(makeError('Data channel event is missing `channel` property', 'ERR_DATA_CHANNEL'));\n    }\n\n    this._channel = event.channel;\n    this._channel.binaryType = 'arraybuffer';\n\n    if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n      this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT;\n    }\n\n    this.channelName = this._channel.label;\n\n    this._channel.onmessage = event => {\n      this._onChannelMessage(event);\n    };\n\n    this._channel.onbufferedamountlow = () => {\n      this._onChannelBufferedAmountLow();\n    };\n\n    this._channel.onopen = () => {\n      this._onChannelOpen();\n    };\n\n    this._channel.onclose = () => {\n      this._onChannelClose();\n    };\n\n    this._channel.onerror = err => {\n      this.destroy(makeError(err, 'ERR_DATA_CHANNEL'));\n    }; // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n\n\n    var isClosing = false;\n    this._closingInterval = setInterval(() => {\n      // No \"onclosing\" event\n      if (this._channel && this._channel.readyState === 'closing') {\n        if (isClosing) this._onChannelClose(); // closing timed out: equivalent to onclose firing\n\n        isClosing = true;\n      } else {\n        isClosing = false;\n      }\n    }, CHANNEL_CLOSING_TIMEOUT);\n  }\n\n  _read() {}\n\n  _write(chunk, encoding, cb) {\n    if (this.destroyed) return cb(makeError('cannot write after peer is destroyed', 'ERR_DATA_CHANNEL'));\n\n    if (this._connected) {\n      try {\n        this.send(chunk);\n      } catch (err) {\n        return this.destroy(makeError(err, 'ERR_DATA_CHANNEL'));\n      }\n\n      if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n        this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount);\n\n        this._cb = cb;\n      } else {\n        cb(null);\n      }\n    } else {\n      this._debug('write before connect');\n\n      this._chunk = chunk;\n      this._cb = cb;\n    }\n  } // When stream finishes writing, close socket. Half open connections are not\n  // supported.\n\n\n  _onFinish() {\n    if (this.destroyed) return; // Wait a bit before destroying so the socket flushes.\n    // TODO: is there a more reliable way to accomplish this?\n\n    const destroySoon = () => {\n      setTimeout(() => this.destroy(), 1000);\n    };\n\n    if (this._connected) {\n      destroySoon();\n    } else {\n      this.once('connect', destroySoon);\n    }\n  }\n\n  _startIceCompleteTimeout() {\n    if (this.destroyed) return;\n    if (this._iceCompleteTimer) return;\n\n    this._debug('started iceComplete timeout');\n\n    this._iceCompleteTimer = setTimeout(() => {\n      if (!this._iceComplete) {\n        this._iceComplete = true;\n\n        this._debug('iceComplete timeout completed');\n\n        this.emit('iceTimeout');\n        this.emit('_iceComplete');\n      }\n    }, this.iceCompleteTimeout);\n  }\n\n  _createOffer() {\n    if (this.destroyed) return;\n\n    this._pc.createOffer(this.offerOptions).then(offer => {\n      if (this.destroyed) return;\n      if (!this.trickle && !this.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp);\n      offer.sdp = this.sdpTransform(offer.sdp);\n\n      const sendOffer = () => {\n        if (this.destroyed) return;\n        var signal = this._pc.localDescription || offer;\n\n        this._debug('signal');\n\n        this.emit('signal', {\n          type: signal.type,\n          sdp: signal.sdp\n        });\n      };\n\n      const onSuccess = () => {\n        this._debug('createOffer success');\n\n        if (this.destroyed) return;\n        if (this.trickle || this._iceComplete) sendOffer();else this.once('_iceComplete', sendOffer); // wait for candidates\n      };\n\n      const onError = err => {\n        this.destroy(makeError(err, 'ERR_SET_LOCAL_DESCRIPTION'));\n      };\n\n      this._pc.setLocalDescription(offer).then(onSuccess).catch(onError);\n    }).catch(err => {\n      this.destroy(makeError(err, 'ERR_CREATE_OFFER'));\n    });\n  }\n\n  _requestMissingTransceivers() {\n    if (this._pc.getTransceivers) {\n      this._pc.getTransceivers().forEach(transceiver => {\n        if (!transceiver.mid && transceiver.sender.track && !transceiver.requested) {\n          transceiver.requested = true; // HACK: Safari returns negotiated transceivers with a null mid\n\n          this.addTransceiver(transceiver.sender.track.kind);\n        }\n      });\n    }\n  }\n\n  _createAnswer() {\n    if (this.destroyed) return;\n\n    this._pc.createAnswer(this.answerOptions).then(answer => {\n      if (this.destroyed) return;\n      if (!this.trickle && !this.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp);\n      answer.sdp = this.sdpTransform(answer.sdp);\n\n      const sendAnswer = () => {\n        if (this.destroyed) return;\n        var signal = this._pc.localDescription || answer;\n\n        this._debug('signal');\n\n        this.emit('signal', {\n          type: signal.type,\n          sdp: signal.sdp\n        });\n        if (!this.initiator) this._requestMissingTransceivers();\n      };\n\n      const onSuccess = () => {\n        if (this.destroyed) return;\n        if (this.trickle || this._iceComplete) sendAnswer();else this.once('_iceComplete', sendAnswer);\n      };\n\n      const onError = err => {\n        this.destroy(makeError(err, 'ERR_SET_LOCAL_DESCRIPTION'));\n      };\n\n      this._pc.setLocalDescription(answer).then(onSuccess).catch(onError);\n    }).catch(err => {\n      this.destroy(makeError(err, 'ERR_CREATE_ANSWER'));\n    });\n  }\n\n  _onConnectionStateChange() {\n    if (this.destroyed) return;\n\n    if (this._pc.connectionState === 'failed') {\n      this.destroy(makeError('Connection failed.', 'ERR_CONNECTION_FAILURE'));\n    }\n  }\n\n  _onIceStateChange() {\n    if (this.destroyed) return;\n    var iceConnectionState = this._pc.iceConnectionState;\n    var iceGatheringState = this._pc.iceGatheringState;\n\n    this._debug('iceStateChange (connection: %s) (gathering: %s)', iceConnectionState, iceGatheringState);\n\n    this.emit('iceStateChange', iceConnectionState, iceGatheringState);\n\n    if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n      this._pcReady = true;\n\n      this._maybeReady();\n    }\n\n    if (iceConnectionState === 'failed') {\n      this.destroy(makeError('Ice connection failed.', 'ERR_ICE_CONNECTION_FAILURE'));\n    }\n\n    if (iceConnectionState === 'closed') {\n      this.destroy(makeError('Ice connection closed.', 'ERR_ICE_CONNECTION_CLOSED'));\n    }\n  }\n\n  getStats(cb) {\n    // statreports can come with a value array instead of properties\n    const flattenValues = report => {\n      if (Object.prototype.toString.call(report.values) === '[object Array]') {\n        report.values.forEach(value => {\n          Object.assign(report, value);\n        });\n      }\n\n      return report;\n    }; // Promise-based getStats() (standard)\n\n\n    if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n      this._pc.getStats().then(res => {\n        var reports = [];\n        res.forEach(report => {\n          reports.push(flattenValues(report));\n        });\n        cb(null, reports);\n      }, err => cb(err)); // Single-parameter callback-based getStats() (non-standard)\n\n    } else if (this._pc.getStats.length > 0) {\n      this._pc.getStats(res => {\n        // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n        if (this.destroyed) return;\n        var reports = [];\n        res.result().forEach(result => {\n          var report = {};\n          result.names().forEach(name => {\n            report[name] = result.stat(name);\n          });\n          report.id = result.id;\n          report.type = result.type;\n          report.timestamp = result.timestamp;\n          reports.push(flattenValues(report));\n        });\n        cb(null, reports);\n      }, err => cb(err)); // Unknown browser, skip getStats() since it's anyone's guess which style of\n      // getStats() they implement.\n\n    } else {\n      cb(null, []);\n    }\n  }\n\n  _maybeReady() {\n    this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady);\n\n    if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return;\n    this._connecting = true; // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n\n    const findCandidatePair = () => {\n      if (this.destroyed) return;\n      this.getStats((err, items) => {\n        if (this.destroyed) return; // Treat getStats error as non-fatal. It's not essential.\n\n        if (err) items = [];\n        var remoteCandidates = {};\n        var localCandidates = {};\n        var candidatePairs = {};\n        var foundSelectedCandidatePair = false;\n        items.forEach(item => {\n          // TODO: Once all browsers support the hyphenated stats report types, remove\n          // the non-hypenated ones\n          if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\n            remoteCandidates[item.id] = item;\n          }\n\n          if (item.type === 'localcandidate' || item.type === 'local-candidate') {\n            localCandidates[item.id] = item;\n          }\n\n          if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n            candidatePairs[item.id] = item;\n          }\n        });\n\n        const setSelectedCandidatePair = selectedCandidatePair => {\n          foundSelectedCandidatePair = true;\n          var local = localCandidates[selectedCandidatePair.localCandidateId];\n\n          if (local && (local.ip || local.address)) {\n            // Spec\n            this.localAddress = local.ip || local.address;\n            this.localPort = Number(local.port);\n          } else if (local && local.ipAddress) {\n            // Firefox\n            this.localAddress = local.ipAddress;\n            this.localPort = Number(local.portNumber);\n          } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            local = selectedCandidatePair.googLocalAddress.split(':');\n            this.localAddress = local[0];\n            this.localPort = Number(local[1]);\n          }\n\n          if (this.localAddress) {\n            this.localFamily = this.localAddress.includes(':') ? 'IPv6' : 'IPv4';\n          }\n\n          var remote = remoteCandidates[selectedCandidatePair.remoteCandidateId];\n\n          if (remote && (remote.ip || remote.address)) {\n            // Spec\n            this.remoteAddress = remote.ip || remote.address;\n            this.remotePort = Number(remote.port);\n          } else if (remote && remote.ipAddress) {\n            // Firefox\n            this.remoteAddress = remote.ipAddress;\n            this.remotePort = Number(remote.portNumber);\n          } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            remote = selectedCandidatePair.googRemoteAddress.split(':');\n            this.remoteAddress = remote[0];\n            this.remotePort = Number(remote[1]);\n          }\n\n          if (this.remoteAddress) {\n            this.remoteFamily = this.remoteAddress.includes(':') ? 'IPv6' : 'IPv4';\n          }\n\n          this._debug('connect local: %s:%s remote: %s:%s', this.localAddress, this.localPort, this.remoteAddress, this.remotePort);\n        };\n\n        items.forEach(item => {\n          // Spec-compliant\n          if (item.type === 'transport' && item.selectedCandidatePairId) {\n            setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId]);\n          } // Old implementations\n\n\n          if (item.type === 'googCandidatePair' && item.googActiveConnection === 'true' || (item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected) {\n            setSelectedCandidatePair(item);\n          }\n        }); // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n        // But wait until at least 1 candidate pair is available\n\n        if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\n          setTimeout(findCandidatePair, 100);\n          return;\n        } else {\n          this._connecting = false;\n          this._connected = true;\n        }\n\n        if (this._chunk) {\n          try {\n            this.send(this._chunk);\n          } catch (err) {\n            return this.destroy(makeError(err, 'ERR_DATA_CHANNEL'));\n          }\n\n          this._chunk = null;\n\n          this._debug('sent chunk from \"write before connect\"');\n\n          var cb = this._cb;\n          this._cb = null;\n          cb(null);\n        } // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n        // fallback to using setInterval to implement backpressure.\n\n\n        if (typeof this._channel.bufferedAmountLowThreshold !== 'number') {\n          this._interval = setInterval(() => this._onInterval(), 150);\n          if (this._interval.unref) this._interval.unref();\n        }\n\n        this._debug('connect');\n\n        this.emit('connect');\n      });\n    };\n\n    findCandidatePair();\n  }\n\n  _onInterval() {\n    if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n      return;\n    }\n\n    this._onChannelBufferedAmountLow();\n  }\n\n  _onSignalingStateChange() {\n    if (this.destroyed) return;\n\n    if (this._pc.signalingState === 'stable' && !this._firstStable) {\n      this._isNegotiating = false; // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n\n      this._debug('flushing sender queue', this._sendersAwaitingStable);\n\n      this._sendersAwaitingStable.forEach(sender => {\n        this._pc.removeTrack(sender);\n\n        this._queuedNegotiation = true;\n      });\n\n      this._sendersAwaitingStable = [];\n\n      if (this._queuedNegotiation) {\n        this._debug('flushing negotiation queue');\n\n        this._queuedNegotiation = false;\n\n        this._needsNegotiation(); // negotiate again\n\n      }\n\n      this._debug('negotiate');\n\n      this.emit('negotiate');\n    }\n\n    this._firstStable = false;\n\n    this._debug('signalingStateChange %s', this._pc.signalingState);\n\n    this.emit('signalingStateChange', this._pc.signalingState);\n  }\n\n  _onIceCandidate(event) {\n    if (this.destroyed) return;\n\n    if (event.candidate && this.trickle) {\n      this.emit('signal', {\n        candidate: {\n          candidate: event.candidate.candidate,\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n          sdpMid: event.candidate.sdpMid\n        }\n      });\n    } else if (!event.candidate && !this._iceComplete) {\n      this._iceComplete = true;\n      this.emit('_iceComplete');\n    } // as soon as we've received one valid candidate start timeout\n\n\n    if (event.candidate) {\n      this._startIceCompleteTimeout();\n    }\n  }\n\n  _onChannelMessage(event) {\n    if (this.destroyed) return;\n    var data = event.data;\n    if (data instanceof ArrayBuffer) data = Buffer.from(data);\n    this.push(data);\n  }\n\n  _onChannelBufferedAmountLow() {\n    if (this.destroyed || !this._cb) return;\n\n    this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount);\n\n    var cb = this._cb;\n    this._cb = null;\n    cb(null);\n  }\n\n  _onChannelOpen() {\n    if (this._connected || this.destroyed) return;\n\n    this._debug('on channel open');\n\n    this._channelReady = true;\n\n    this._maybeReady();\n  }\n\n  _onChannelClose() {\n    if (this.destroyed) return;\n\n    this._debug('on channel close');\n\n    this.destroy();\n  }\n\n  _onTrack(event) {\n    if (this.destroyed) return;\n    event.streams.forEach(eventStream => {\n      this._debug('on track');\n\n      this.emit('track', event.track, eventStream);\n\n      this._remoteTracks.push({\n        track: event.track,\n        stream: eventStream\n      });\n\n      if (this._remoteStreams.some(remoteStream => {\n        return remoteStream.id === eventStream.id;\n      })) return; // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n      this._remoteStreams.push(eventStream);\n\n      queueMicrotask(() => {\n        this.emit('stream', eventStream); // ensure all tracks have been added\n      });\n    });\n  }\n\n  _debug() {\n    var args = [].slice.call(arguments);\n    args[0] = '[' + this._id + '] ' + args[0];\n    debug.apply(null, args);\n  }\n\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC();\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\n\nPeer.config = {\n  iceServers: [{\n    urls: 'stun:stun.l.google.com:19302'\n  }, {\n    urls: 'stun:global.stun.twilio.com:3478?transport=udp'\n  }],\n  sdpSemantics: 'unified-plan'\n};\nPeer.channelConfig = {};\nmodule.exports = Peer;","map":{"version":3,"names":["debug","require","getBrowserRTC","randombytes","stream","queueMicrotask","MAX_BUFFERED_AMOUNT","ICECOMPLETE_TIMEOUT","CHANNEL_CLOSING_TIMEOUT","filterTrickle","sdp","replace","makeError","message","code","err","Error","warn","console","Peer","Duplex","constructor","opts","Object","assign","allowHalfOpen","_id","toString","slice","_debug","channelName","initiator","channelConfig","config","offerOptions","answerOptions","sdpTransform","streams","trickle","undefined","allowHalfTrickle","iceCompleteTimeout","destroyed","_connected","remoteAddress","remoteFamily","remotePort","localAddress","localFamily","localPort","_wrtc","wrtc","window","_pcReady","_channelReady","_iceComplete","_iceCompleteTimer","_channel","_pendingCandidates","_isNegotiating","_batchedNegotiation","_queuedNegotiation","_sendersAwaitingStable","_senderMap","Map","_firstStable","_closingInterval","_remoteTracks","_remoteStreams","_chunk","_cb","_interval","_pc","RTCPeerConnection","destroy","_isReactNativeWebrtc","_peerConnectionId","oniceconnectionstatechange","_onIceStateChange","onicegatheringstatechange","onconnectionstatechange","_onConnectionStateChange","onsignalingstatechange","_onSignalingStateChange","onicecandidate","event","_onIceCandidate","_setupData","channel","createDataChannel","ondatachannel","forEach","addStream","ontrack","_onTrack","_needsNegotiation","_onFinishBound","_onFinish","once","bufferSize","bufferedAmount","connected","readyState","address","port","family","signal","data","JSON","parse","renegotiate","transceiverRequest","addTransceiver","kind","init","candidate","remoteDescription","type","_addIceCandidate","push","setRemoteDescription","RTCSessionDescription","then","_createAnswer","catch","iceCandidateObj","RTCIceCandidate","addIceCandidate","endsWith","send","chunk","emit","getTracks","track","addTrack","submap","get","sender","set","removed","replaceTrack","oldTrack","newTrack","removeTrack","name","removeStream","negotiate","setTimeout","_createOffer","_destroy","cb","readable","writable","_readableState","ended","_writableState","finished","end","clearInterval","removeListener","close","onmessage","onopen","onclose","onerror","binaryType","bufferedAmountLowThreshold","label","_onChannelMessage","onbufferedamountlow","_onChannelBufferedAmountLow","_onChannelOpen","_onChannelClose","isClosing","setInterval","_read","_write","encoding","destroySoon","_startIceCompleteTimeout","createOffer","offer","sendOffer","localDescription","onSuccess","onError","setLocalDescription","_requestMissingTransceivers","getTransceivers","transceiver","mid","requested","createAnswer","answer","sendAnswer","connectionState","iceConnectionState","iceGatheringState","_maybeReady","getStats","flattenValues","report","prototype","call","values","value","length","res","reports","result","names","stat","id","timestamp","_connecting","findCandidatePair","items","remoteCandidates","localCandidates","candidatePairs","foundSelectedCandidatePair","item","setSelectedCandidatePair","selectedCandidatePair","local","localCandidateId","ip","Number","ipAddress","portNumber","googLocalAddress","split","includes","remote","remoteCandidateId","googRemoteAddress","selectedCandidatePairId","googActiveConnection","selected","keys","_onInterval","unref","signalingState","sdpMLineIndex","sdpMid","ArrayBuffer","Buffer","from","eventStream","some","remoteStream","args","arguments","apply","WEBRTC_SUPPORT","iceServers","urls","sdpSemantics","module","exports"],"sources":["/Users/faheem/Documents/RESEARCH/Group chat/client/node_modules/simple-peer/index.js"],"sourcesContent":["var debug = require('debug')('simple-peer')\nvar getBrowserRTC = require('get-browser-rtc')\nvar randombytes = require('randombytes')\nvar stream = require('readable-stream')\nvar queueMicrotask = require('queue-microtask') // TODO: remove when Node 10 is not supported\n\nvar MAX_BUFFERED_AMOUNT = 64 * 1024\nvar ICECOMPLETE_TIMEOUT = 5 * 1000\nvar CHANNEL_CLOSING_TIMEOUT = 5 * 1000\n\n// HACK: Filter trickle lines when trickle is disabled #354\nfunction filterTrickle (sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '')\n}\n\nfunction makeError (message, code) {\n  var err = new Error(message)\n  err.code = code\n  return err\n}\n\nfunction warn (message) {\n  console.warn(message)\n}\n\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\nclass Peer extends stream.Duplex {\n  constructor (opts) {\n    opts = Object.assign({\n      allowHalfOpen: false\n    }, opts)\n\n    super(opts)\n\n    this._id = randombytes(4).toString('hex').slice(0, 7)\n    this._debug('new peer %o', opts)\n\n    this.channelName = opts.initiator\n      ? opts.channelName || randombytes(20).toString('hex')\n      : null\n\n    this.initiator = opts.initiator || false\n    this.channelConfig = opts.channelConfig || Peer.channelConfig\n    this.config = Object.assign({}, Peer.config, opts.config)\n    this.offerOptions = opts.offerOptions || {}\n    this.answerOptions = opts.answerOptions || {}\n    this.sdpTransform = opts.sdpTransform || (sdp => sdp)\n    this.streams = opts.streams || (opts.stream ? [opts.stream] : []) // support old \"stream\" option\n    this.trickle = opts.trickle !== undefined ? opts.trickle : true\n    this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false\n    this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT\n\n    this.destroyed = false\n    this._connected = false\n\n    this.remoteAddress = undefined\n    this.remoteFamily = undefined\n    this.remotePort = undefined\n    this.localAddress = undefined\n    this.localFamily = undefined\n    this.localPort = undefined\n\n    this._wrtc = (opts.wrtc && typeof opts.wrtc === 'object')\n      ? opts.wrtc\n      : getBrowserRTC()\n\n    if (!this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw makeError('No WebRTC support: Specify `opts.wrtc` option in this environment', 'ERR_WEBRTC_SUPPORT')\n      } else {\n        throw makeError('No WebRTC support: Not a supported browser', 'ERR_WEBRTC_SUPPORT')\n      }\n    }\n\n    this._pcReady = false\n    this._channelReady = false\n    this._iceComplete = false // ice candidate trickle done (got null candidate)\n    this._iceCompleteTimer = null // send an offer/answer anyway after some timeout\n    this._channel = null\n    this._pendingCandidates = []\n\n    this._isNegotiating = !this.initiator // is this peer waiting for negotiation to complete?\n    this._batchedNegotiation = false // batch synchronous negotiations\n    this._queuedNegotiation = false // is there a queued negotiation request?\n    this._sendersAwaitingStable = []\n    this._senderMap = new Map()\n    this._firstStable = true\n    this._closingInterval = null\n\n    this._remoteTracks = []\n    this._remoteStreams = []\n\n    this._chunk = null\n    this._cb = null\n    this._interval = null\n\n    try {\n      this._pc = new (this._wrtc.RTCPeerConnection)(this.config)\n    } catch (err) {\n      queueMicrotask(() => this.destroy(makeError(err, 'ERR_PC_CONSTRUCTOR')))\n      return\n    }\n\n    // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n    this._isReactNativeWebrtc = typeof this._pc._peerConnectionId === 'number'\n\n    this._pc.oniceconnectionstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onicegatheringstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onconnectionstatechange = () => {\n      this._onConnectionStateChange()\n    }\n    this._pc.onsignalingstatechange = () => {\n      this._onSignalingStateChange()\n    }\n    this._pc.onicecandidate = event => {\n      this._onIceCandidate(event)\n    }\n\n    // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n    if (this.initiator) {\n      this._setupData({\n        channel: this._pc.createDataChannel(this.channelName, this.channelConfig)\n      })\n    } else {\n      this._pc.ondatachannel = event => {\n        this._setupData(event)\n      }\n    }\n\n    if (this.streams) {\n      this.streams.forEach(stream => {\n        this.addStream(stream)\n      })\n    }\n    this._pc.ontrack = event => {\n      this._onTrack(event)\n    }\n\n    if (this.initiator) {\n      this._needsNegotiation()\n    }\n\n    this._onFinishBound = () => {\n      this._onFinish()\n    }\n    this.once('finish', this._onFinishBound)\n  }\n\n  get bufferSize () {\n    return (this._channel && this._channel.bufferedAmount) || 0\n  }\n\n  // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n  get connected () {\n    return (this._connected && this._channel.readyState === 'open')\n  }\n\n  address () {\n    return { port: this.localPort, family: this.localFamily, address: this.localAddress }\n  }\n\n  signal (data) {\n    if (this.destroyed) throw makeError('cannot signal after peer is destroyed', 'ERR_SIGNALING')\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data)\n      } catch (err) {\n        data = {}\n      }\n    }\n    this._debug('signal()')\n\n    if (data.renegotiate && this.initiator) {\n      this._debug('got request to renegotiate')\n      this._needsNegotiation()\n    }\n    if (data.transceiverRequest && this.initiator) {\n      this._debug('got request for transceiver')\n      this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init)\n    }\n    if (data.candidate) {\n      if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n        this._addIceCandidate(data.candidate)\n      } else {\n        this._pendingCandidates.push(data.candidate)\n      }\n    }\n    if (data.sdp) {\n      this._pc.setRemoteDescription(new (this._wrtc.RTCSessionDescription)(data))\n        .then(() => {\n          if (this.destroyed) return\n\n          this._pendingCandidates.forEach(candidate => {\n            this._addIceCandidate(candidate)\n          })\n          this._pendingCandidates = []\n\n          if (this._pc.remoteDescription.type === 'offer') this._createAnswer()\n        })\n        .catch(err => {\n          this.destroy(makeError(err, 'ERR_SET_REMOTE_DESCRIPTION'))\n        })\n    }\n    if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\n      this.destroy(makeError('signal() called with invalid signal data', 'ERR_SIGNALING'))\n    }\n  }\n\n  _addIceCandidate (candidate) {\n    var iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate)\n    this._pc.addIceCandidate(iceCandidateObj)\n      .catch(err => {\n        if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\n          warn('Ignoring unsupported ICE candidate.')\n        } else {\n          this.destroy(makeError(err, 'ERR_ADD_ICE_CANDIDATE'))\n        }\n      })\n  }\n\n  /**\n   * Send text/binary data to the remote peer.\n   * @param {ArrayBufferView|ArrayBuffer|Buffer|string|Blob} chunk\n   */\n  send (chunk) {\n    this._channel.send(chunk)\n  }\n\n  /**\n   * Add a Transceiver to the connection.\n   * @param {String} kind\n   * @param {Object} init\n   */\n  addTransceiver (kind, init) {\n    this._debug('addTransceiver()')\n\n    if (this.initiator) {\n      try {\n        this._pc.addTransceiver(kind, init)\n        this._needsNegotiation()\n      } catch (err) {\n        this.destroy(makeError(err, 'ERR_ADD_TRANSCEIVER'))\n      }\n    } else {\n      this.emit('signal', { // request initiator to renegotiate\n        transceiverRequest: { kind, init }\n      })\n    }\n  }\n\n  /**\n   * Add a MediaStream to the connection.\n   * @param {MediaStream} stream\n   */\n  addStream (stream) {\n    this._debug('addStream()')\n\n    stream.getTracks().forEach(track => {\n      this.addTrack(track, stream)\n    })\n  }\n\n  /**\n   * Add a MediaStreamTrack to the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  addTrack (track, stream) {\n    this._debug('addTrack()')\n\n    var submap = this._senderMap.get(track) || new Map() // nested Maps map [track, stream] to sender\n    var sender = submap.get(stream)\n    if (!sender) {\n      sender = this._pc.addTrack(track, stream)\n      submap.set(stream, sender)\n      this._senderMap.set(track, submap)\n      this._needsNegotiation()\n    } else if (sender.removed) {\n      throw makeError('Track has been removed. You should enable/disable tracks that you want to re-add.', 'ERR_SENDER_REMOVED')\n    } else {\n      throw makeError('Track has already been added to that stream.', 'ERR_SENDER_ALREADY_ADDED')\n    }\n  }\n\n  /**\n   * Replace a MediaStreamTrack by another in the connection.\n   * @param {MediaStreamTrack} oldTrack\n   * @param {MediaStreamTrack} newTrack\n   * @param {MediaStream} stream\n   */\n  replaceTrack (oldTrack, newTrack, stream) {\n    this._debug('replaceTrack()')\n\n    var submap = this._senderMap.get(oldTrack)\n    var sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw makeError('Cannot replace track that was never added.', 'ERR_TRACK_NOT_ADDED')\n    }\n    if (newTrack) this._senderMap.set(newTrack, submap)\n\n    if (sender.replaceTrack != null) {\n      sender.replaceTrack(newTrack)\n    } else {\n      this.destroy(makeError('replaceTrack is not supported in this browser', 'ERR_UNSUPPORTED_REPLACETRACK'))\n    }\n  }\n\n  /**\n   * Remove a MediaStreamTrack from the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  removeTrack (track, stream) {\n    this._debug('removeSender()')\n\n    var submap = this._senderMap.get(track)\n    var sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw makeError('Cannot remove track that was never added.', 'ERR_TRACK_NOT_ADDED')\n    }\n    try {\n      sender.removed = true\n      this._pc.removeTrack(sender)\n    } catch (err) {\n      if (err.name === 'NS_ERROR_UNEXPECTED') {\n        this._sendersAwaitingStable.push(sender) // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n      } else {\n        this.destroy(makeError(err, 'ERR_REMOVE_TRACK'))\n      }\n    }\n    this._needsNegotiation()\n  }\n\n  /**\n   * Remove a MediaStream from the connection.\n   * @param {MediaStream} stream\n   */\n  removeStream (stream) {\n    this._debug('removeSenders()')\n\n    stream.getTracks().forEach(track => {\n      this.removeTrack(track, stream)\n    })\n  }\n\n  _needsNegotiation () {\n    this._debug('_needsNegotiation')\n    if (this._batchedNegotiation) return // batch synchronous renegotiations\n    this._batchedNegotiation = true\n    queueMicrotask(() => {\n      this._batchedNegotiation = false\n      this._debug('starting batched negotiation')\n      this.negotiate()\n    })\n  }\n\n  negotiate () {\n    if (this.initiator) {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('start negotiation')\n        setTimeout(() => { // HACK: Chrome crashes if we immediately call createOffer\n          this._createOffer()\n        }, 0)\n      }\n    } else {\n      if (!this._isNegotiating) {\n        this._debug('requesting negotiation from initiator')\n        this.emit('signal', { // request initiator to renegotiate\n          renegotiate: true\n        })\n      }\n    }\n    this._isNegotiating = true\n  }\n\n  // TODO: Delete this method once readable-stream is updated to contain a default\n  // implementation of destroy() that automatically calls _destroy()\n  // See: https://github.com/nodejs/readable-stream/issues/283\n  destroy (err) {\n    this._destroy(err, () => {})\n  }\n\n  _destroy (err, cb) {\n    if (this.destroyed) return\n\n    this._debug('destroy (error: %s)', err && (err.message || err))\n\n    this.readable = this.writable = false\n\n    if (!this._readableState.ended) this.push(null)\n    if (!this._writableState.finished) this.end()\n\n    this.destroyed = true\n    this._connected = false\n    this._pcReady = false\n    this._channelReady = false\n    this._remoteTracks = null\n    this._remoteStreams = null\n    this._senderMap = null\n\n    clearInterval(this._closingInterval)\n    this._closingInterval = null\n\n    clearInterval(this._interval)\n    this._interval = null\n    this._chunk = null\n    this._cb = null\n\n    if (this._onFinishBound) this.removeListener('finish', this._onFinishBound)\n    this._onFinishBound = null\n\n    if (this._channel) {\n      try {\n        this._channel.close()\n      } catch (err) {}\n\n      this._channel.onmessage = null\n      this._channel.onopen = null\n      this._channel.onclose = null\n      this._channel.onerror = null\n    }\n    if (this._pc) {\n      try {\n        this._pc.close()\n      } catch (err) {}\n\n      this._pc.oniceconnectionstatechange = null\n      this._pc.onicegatheringstatechange = null\n      this._pc.onsignalingstatechange = null\n      this._pc.onicecandidate = null\n      this._pc.ontrack = null\n      this._pc.ondatachannel = null\n    }\n    this._pc = null\n    this._channel = null\n\n    if (err) this.emit('error', err)\n    this.emit('close')\n    cb()\n  }\n\n  _setupData (event) {\n    if (!event.channel) {\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n      // which is invalid behavior. Handle it gracefully.\n      // See: https://github.com/feross/simple-peer/issues/163\n      return this.destroy(makeError('Data channel event is missing `channel` property', 'ERR_DATA_CHANNEL'))\n    }\n\n    this._channel = event.channel\n    this._channel.binaryType = 'arraybuffer'\n\n    if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n      this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT\n    }\n\n    this.channelName = this._channel.label\n\n    this._channel.onmessage = event => {\n      this._onChannelMessage(event)\n    }\n    this._channel.onbufferedamountlow = () => {\n      this._onChannelBufferedAmountLow()\n    }\n    this._channel.onopen = () => {\n      this._onChannelOpen()\n    }\n    this._channel.onclose = () => {\n      this._onChannelClose()\n    }\n    this._channel.onerror = err => {\n      this.destroy(makeError(err, 'ERR_DATA_CHANNEL'))\n    }\n\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    var isClosing = false\n    this._closingInterval = setInterval(() => { // No \"onclosing\" event\n      if (this._channel && this._channel.readyState === 'closing') {\n        if (isClosing) this._onChannelClose() // closing timed out: equivalent to onclose firing\n        isClosing = true\n      } else {\n        isClosing = false\n      }\n    }, CHANNEL_CLOSING_TIMEOUT)\n  }\n\n  _read () {}\n\n  _write (chunk, encoding, cb) {\n    if (this.destroyed) return cb(makeError('cannot write after peer is destroyed', 'ERR_DATA_CHANNEL'))\n\n    if (this._connected) {\n      try {\n        this.send(chunk)\n      } catch (err) {\n        return this.destroy(makeError(err, 'ERR_DATA_CHANNEL'))\n      }\n      if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n        this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n        this._cb = cb\n      } else {\n        cb(null)\n      }\n    } else {\n      this._debug('write before connect')\n      this._chunk = chunk\n      this._cb = cb\n    }\n  }\n\n  // When stream finishes writing, close socket. Half open connections are not\n  // supported.\n  _onFinish () {\n    if (this.destroyed) return\n\n    // Wait a bit before destroying so the socket flushes.\n    // TODO: is there a more reliable way to accomplish this?\n    const destroySoon = () => {\n      setTimeout(() => this.destroy(), 1000)\n    }\n\n    if (this._connected) {\n      destroySoon()\n    } else {\n      this.once('connect', destroySoon)\n    }\n  }\n\n  _startIceCompleteTimeout () {\n    if (this.destroyed) return\n    if (this._iceCompleteTimer) return\n    this._debug('started iceComplete timeout')\n    this._iceCompleteTimer = setTimeout(() => {\n      if (!this._iceComplete) {\n        this._iceComplete = true\n        this._debug('iceComplete timeout completed')\n        this.emit('iceTimeout')\n        this.emit('_iceComplete')\n      }\n    }, this.iceCompleteTimeout)\n  }\n\n  _createOffer () {\n    if (this.destroyed) return\n\n    this._pc.createOffer(this.offerOptions)\n      .then(offer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp)\n        offer.sdp = this.sdpTransform(offer.sdp)\n\n        const sendOffer = () => {\n          if (this.destroyed) return\n          var signal = this._pc.localDescription || offer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n        }\n\n        const onSuccess = () => {\n          this._debug('createOffer success')\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendOffer()\n          else this.once('_iceComplete', sendOffer) // wait for candidates\n        }\n\n        const onError = err => {\n          this.destroy(makeError(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(offer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(makeError(err, 'ERR_CREATE_OFFER'))\n      })\n  }\n\n  _requestMissingTransceivers () {\n    if (this._pc.getTransceivers) {\n      this._pc.getTransceivers().forEach(transceiver => {\n        if (!transceiver.mid && transceiver.sender.track && !transceiver.requested) {\n          transceiver.requested = true // HACK: Safari returns negotiated transceivers with a null mid\n          this.addTransceiver(transceiver.sender.track.kind)\n        }\n      })\n    }\n  }\n\n  _createAnswer () {\n    if (this.destroyed) return\n\n    this._pc.createAnswer(this.answerOptions)\n      .then(answer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp)\n        answer.sdp = this.sdpTransform(answer.sdp)\n\n        const sendAnswer = () => {\n          if (this.destroyed) return\n          var signal = this._pc.localDescription || answer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n          if (!this.initiator) this._requestMissingTransceivers()\n        }\n\n        const onSuccess = () => {\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendAnswer()\n          else this.once('_iceComplete', sendAnswer)\n        }\n\n        const onError = err => {\n          this.destroy(makeError(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(answer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(makeError(err, 'ERR_CREATE_ANSWER'))\n      })\n  }\n\n  _onConnectionStateChange () {\n    if (this.destroyed) return\n    if (this._pc.connectionState === 'failed') {\n      this.destroy(makeError('Connection failed.', 'ERR_CONNECTION_FAILURE'))\n    }\n  }\n\n  _onIceStateChange () {\n    if (this.destroyed) return\n    var iceConnectionState = this._pc.iceConnectionState\n    var iceGatheringState = this._pc.iceGatheringState\n\n    this._debug(\n      'iceStateChange (connection: %s) (gathering: %s)',\n      iceConnectionState,\n      iceGatheringState\n    )\n    this.emit('iceStateChange', iceConnectionState, iceGatheringState)\n\n    if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n      this._pcReady = true\n      this._maybeReady()\n    }\n    if (iceConnectionState === 'failed') {\n      this.destroy(makeError('Ice connection failed.', 'ERR_ICE_CONNECTION_FAILURE'))\n    }\n    if (iceConnectionState === 'closed') {\n      this.destroy(makeError('Ice connection closed.', 'ERR_ICE_CONNECTION_CLOSED'))\n    }\n  }\n\n  getStats (cb) {\n    // statreports can come with a value array instead of properties\n    const flattenValues = report => {\n      if (Object.prototype.toString.call(report.values) === '[object Array]') {\n        report.values.forEach(value => {\n          Object.assign(report, value)\n        })\n      }\n      return report\n    }\n\n    // Promise-based getStats() (standard)\n    if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n      this._pc.getStats()\n        .then(res => {\n          var reports = []\n          res.forEach(report => {\n            reports.push(flattenValues(report))\n          })\n          cb(null, reports)\n        }, err => cb(err))\n\n    // Single-parameter callback-based getStats() (non-standard)\n    } else if (this._pc.getStats.length > 0) {\n      this._pc.getStats(res => {\n        // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n        if (this.destroyed) return\n\n        var reports = []\n        res.result().forEach(result => {\n          var report = {}\n          result.names().forEach(name => {\n            report[name] = result.stat(name)\n          })\n          report.id = result.id\n          report.type = result.type\n          report.timestamp = result.timestamp\n          reports.push(flattenValues(report))\n        })\n        cb(null, reports)\n      }, err => cb(err))\n\n    // Unknown browser, skip getStats() since it's anyone's guess which style of\n    // getStats() they implement.\n    } else {\n      cb(null, [])\n    }\n  }\n\n  _maybeReady () {\n    this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady)\n    if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return\n\n    this._connecting = true\n\n    // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n    const findCandidatePair = () => {\n      if (this.destroyed) return\n\n      this.getStats((err, items) => {\n        if (this.destroyed) return\n\n        // Treat getStats error as non-fatal. It's not essential.\n        if (err) items = []\n\n        var remoteCandidates = {}\n        var localCandidates = {}\n        var candidatePairs = {}\n        var foundSelectedCandidatePair = false\n\n        items.forEach(item => {\n          // TODO: Once all browsers support the hyphenated stats report types, remove\n          // the non-hypenated ones\n          if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\n            remoteCandidates[item.id] = item\n          }\n          if (item.type === 'localcandidate' || item.type === 'local-candidate') {\n            localCandidates[item.id] = item\n          }\n          if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n            candidatePairs[item.id] = item\n          }\n        })\n\n        const setSelectedCandidatePair = selectedCandidatePair => {\n          foundSelectedCandidatePair = true\n\n          var local = localCandidates[selectedCandidatePair.localCandidateId]\n\n          if (local && (local.ip || local.address)) {\n            // Spec\n            this.localAddress = local.ip || local.address\n            this.localPort = Number(local.port)\n          } else if (local && local.ipAddress) {\n            // Firefox\n            this.localAddress = local.ipAddress\n            this.localPort = Number(local.portNumber)\n          } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            local = selectedCandidatePair.googLocalAddress.split(':')\n            this.localAddress = local[0]\n            this.localPort = Number(local[1])\n          }\n          if (this.localAddress) {\n            this.localFamily = this.localAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          var remote = remoteCandidates[selectedCandidatePair.remoteCandidateId]\n\n          if (remote && (remote.ip || remote.address)) {\n            // Spec\n            this.remoteAddress = remote.ip || remote.address\n            this.remotePort = Number(remote.port)\n          } else if (remote && remote.ipAddress) {\n            // Firefox\n            this.remoteAddress = remote.ipAddress\n            this.remotePort = Number(remote.portNumber)\n          } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            remote = selectedCandidatePair.googRemoteAddress.split(':')\n            this.remoteAddress = remote[0]\n            this.remotePort = Number(remote[1])\n          }\n          if (this.remoteAddress) {\n            this.remoteFamily = this.remoteAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          this._debug(\n            'connect local: %s:%s remote: %s:%s',\n            this.localAddress, this.localPort, this.remoteAddress, this.remotePort\n          )\n        }\n\n        items.forEach(item => {\n          // Spec-compliant\n          if (item.type === 'transport' && item.selectedCandidatePairId) {\n            setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId])\n          }\n\n          // Old implementations\n          if (\n            (item.type === 'googCandidatePair' && item.googActiveConnection === 'true') ||\n            ((item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected)\n          ) {\n            setSelectedCandidatePair(item)\n          }\n        })\n\n        // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n        // But wait until at least 1 candidate pair is available\n        if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\n          setTimeout(findCandidatePair, 100)\n          return\n        } else {\n          this._connecting = false\n          this._connected = true\n        }\n\n        if (this._chunk) {\n          try {\n            this.send(this._chunk)\n          } catch (err) {\n            return this.destroy(makeError(err, 'ERR_DATA_CHANNEL'))\n          }\n          this._chunk = null\n          this._debug('sent chunk from \"write before connect\"')\n\n          var cb = this._cb\n          this._cb = null\n          cb(null)\n        }\n\n        // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n        // fallback to using setInterval to implement backpressure.\n        if (typeof this._channel.bufferedAmountLowThreshold !== 'number') {\n          this._interval = setInterval(() => this._onInterval(), 150)\n          if (this._interval.unref) this._interval.unref()\n        }\n\n        this._debug('connect')\n        this.emit('connect')\n      })\n    }\n    findCandidatePair()\n  }\n\n  _onInterval () {\n    if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n      return\n    }\n    this._onChannelBufferedAmountLow()\n  }\n\n  _onSignalingStateChange () {\n    if (this.destroyed) return\n\n    if (this._pc.signalingState === 'stable' && !this._firstStable) {\n      this._isNegotiating = false\n\n      // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n      this._debug('flushing sender queue', this._sendersAwaitingStable)\n      this._sendersAwaitingStable.forEach(sender => {\n        this._pc.removeTrack(sender)\n        this._queuedNegotiation = true\n      })\n      this._sendersAwaitingStable = []\n\n      if (this._queuedNegotiation) {\n        this._debug('flushing negotiation queue')\n        this._queuedNegotiation = false\n        this._needsNegotiation() // negotiate again\n      }\n\n      this._debug('negotiate')\n      this.emit('negotiate')\n    }\n    this._firstStable = false\n\n    this._debug('signalingStateChange %s', this._pc.signalingState)\n    this.emit('signalingStateChange', this._pc.signalingState)\n  }\n\n  _onIceCandidate (event) {\n    if (this.destroyed) return\n    if (event.candidate && this.trickle) {\n      this.emit('signal', {\n        candidate: {\n          candidate: event.candidate.candidate,\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n          sdpMid: event.candidate.sdpMid\n        }\n      })\n    } else if (!event.candidate && !this._iceComplete) {\n      this._iceComplete = true\n      this.emit('_iceComplete')\n    }\n    // as soon as we've received one valid candidate start timeout\n    if (event.candidate) {\n      this._startIceCompleteTimeout()\n    }\n  }\n\n  _onChannelMessage (event) {\n    if (this.destroyed) return\n    var data = event.data\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\n    this.push(data)\n  }\n\n  _onChannelBufferedAmountLow () {\n    if (this.destroyed || !this._cb) return\n    this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n    var cb = this._cb\n    this._cb = null\n    cb(null)\n  }\n\n  _onChannelOpen () {\n    if (this._connected || this.destroyed) return\n    this._debug('on channel open')\n    this._channelReady = true\n    this._maybeReady()\n  }\n\n  _onChannelClose () {\n    if (this.destroyed) return\n    this._debug('on channel close')\n    this.destroy()\n  }\n\n  _onTrack (event) {\n    if (this.destroyed) return\n\n    event.streams.forEach(eventStream => {\n      this._debug('on track')\n      this.emit('track', event.track, eventStream)\n\n      this._remoteTracks.push({\n        track: event.track,\n        stream: eventStream\n      })\n\n      if (this._remoteStreams.some(remoteStream => {\n        return remoteStream.id === eventStream.id\n      })) return // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n      this._remoteStreams.push(eventStream)\n      queueMicrotask(() => {\n        this.emit('stream', eventStream) // ensure all tracks have been added\n      })\n    })\n  }\n\n  _debug () {\n    var args = [].slice.call(arguments)\n    args[0] = '[' + this._id + '] ' + args[0]\n    debug.apply(null, args)\n  }\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC()\n\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [\n    {\n      urls: 'stun:stun.l.google.com:19302'\n    },\n    {\n      urls: 'stun:global.stun.twilio.com:3478?transport=udp'\n    }\n  ],\n  sdpSemantics: 'unified-plan'\n}\n\nPeer.channelConfig = {}\n\nmodule.exports = Peer\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}